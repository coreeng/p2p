name: p2p-command

on:
  workflow_call:
    secrets:
      env_vars:
        required: false
    inputs:
      command:
        required: true 
        type: string
      project-id:
        required: true
        type: string
      workload-identity-provider:
        required: true
        type: string
      service-account:
        required: true
        type: string
      dry-run:
        required: false
        type: boolean
        default: false
      region:
        required: false
        type: string
        default: europe-west2
      zone:
        required: false
        type: string
        default: europe-west2-a
env:
  REGISTRY: ${{ inputs.region }}-docker.pkg.dev/${{ inputs.project-id }}/tenant

jobs:
  p2p:
    name: ${{ inputs.command }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: auth
        if: inputs.dry-run == false
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ inputs.workload-identity-provider }}
          service_account: ${{ inputs.service-account }}
          token_format: access_token
          access_token_lifetime: 600s

      - name: Setup Google Cloud SDK
        id: setup-gcloud
        if: inputs.dry-run == false
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: beta,gke-gcloud-auth-plugin

      - name: Setup NumPy
        id: setup-numpy
        if: inputs.dry-run == false
        shell: bash
        # https://cloud.google.com/iap/docs/using-tcp-forwarding#increasing_the_tcp_upload_bandwidth
        run: $(gcloud info --format="value(basic.python_location)") -m pip install numpy

      - name: Setup IAP tunnel
        id: setup-iap-tunnel
        if: inputs.dry-run == false
        shell: bash
        run: |
          nohup sh -c "while true ; do gcloud compute start-iap-tunnel sandbox-gcp-bastion 3128 --local-host-port localhost:57755 --project ${{ inputs.project-id }}  --zone ${{ inputs.zone }}  ; done" &
          sleep 4

      - name: Setup kubeconfig
        id: setup-kubeconfig
        if: inputs.dry-run == false
        shell: bash
        run: |
          gcloud container clusters get-credentials --project ${{ inputs.project-id }} --zone ${{ inputs.region }} --internal-ip sandbox-gcp
          kubectl config set clusters.gke_${{ inputs.project-id }}_${{ inputs.region }}_sandbox-gcp.proxy-url http://localhost:57755
    
      - name: Test kubectl
        id: test-kubectl
        if: inputs.dry-run == false
        shell: bash
        run: kubectl cluster-info

      - name: Login to Artifact Registry
        uses: docker/login-action@v2
        if: inputs.dry-run == false
        with:
          registry: europe-west2-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Decode environment variables
        run: |
          for i in $env_vars; do
            i=$(echo $i | sed 's/=.*//g')=$(echo ${i#*=} | base64 -di | base64 -di)
            echo ::add-mask::${i#*=}
            printf '%s\n' $i >> $GITHUB_ENV
          done

      - name: Run Command
        id: run-command
        run: |
          make ${{ inputs.command }}
