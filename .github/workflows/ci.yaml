name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  increment-version:
    uses: ./.github/workflows/increment-version.yaml
    secrets:
      git-token: ${{ secrets.GITHUB_TOKEN }}
    with:
      dry-run: true

  print-version:
    runs-on: ubuntu-latest
    needs: increment-version
    steps:
      - env:
          VERSION: ${{needs.increment-version.outputs.version}}
        id: step1
        run: echo "The Next Version is $VERSION"

  test_execute_command:
    uses: ./.github/workflows/execute-command.yaml
    secrets:
      env_vars: |
        TEST_VARIABLE=value
    with:
      env-name: test-env
      command: test-var-print
      workload-identity-provider: WORKLOAD_IP
      service-account: SERVICE_ACCOUNT
      project-id: TEST-TENANT
      dry-run: true

  test_execute_command_without_env_vars:
    uses: ./.github/workflows/execute-command.yaml
    with:
      env-name: test-env
      command: p2p-build
      workload-identity-provider: WORKLOAD_IP
      service-account: SERVICE_ACCOUNT
      project-id: TEST-TENANT
      dry-run: true

  test_execute_command_with_pre_post_steps:
    uses: ./.github/workflows/execute-command.yaml
    secrets:
      env_vars: |
        SOME_SECRET=123
    with:
      env-name: test-env
      command: p2p-build
      workload-identity-provider: WORKLOAD_IP
      service-account: SERVICE_ACCOUNT
      project-id: TEST-TENANT
      dry-run: true
      pre-targets: test-pre-step
      post-targets: test-post-step

  p2p:
    uses: ./.github/workflows/p2p.yaml
    secrets:
      env_vars: |
        TEST_VARIABLE=value
    with:
      dev-env-name: test-env
      prod-env-name: test-env
      dev-project-id: PROJECT-ID
      prod-project-id: PROJECT-ID
      dev-project-number: PROJECT-NUMBER
      prod-project-number: PROJECT-NUMBER
      tenant-name: TEST-TENANT
      dry-run: true
      pre-targets: test-pre-step
      post-targets: test-post-step
