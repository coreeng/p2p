name: Developer Platform P2P

on:
  workflow_call:
    secrets:
      env_vars:
        required: false
    inputs:
      dev-env-name:
        required: true
        type: string
      dev-project-id:
        required: true
        type: string
      dev-project-number:
        required: true
        type: string
      tenant-name:
        required: true
        type: string
      region:
        required: false
        type: string
        default: europe-west2
      dry-run:
        required: false
        type: boolean
        default: false
      pre-targets:
        description: |
          Make targets to run before each p2p command
        required: false
        type: string
        default: ''
      post-targets:
        description: |
          Make targets to run after each p2p command
        required: false
        type: string
        default: ''

env:
  DEV_SERVICE_ACCOUNT: p2p-${{ inputs.tenant-name }}@${{ inputs.dev-project-id }}.iam.gserviceaccount.com
  DEV_WORKLOAD_IDENTITY_PROVIDER: projects/${{ inputs.dev-project-number }}/locations/global/workloadIdentityPools/p2p-${{ inputs.tenant-name }}/providers/p2p-${{ inputs.tenant-name }}
  DEV_ENVIRONMENT: ${{ inputs.dev-env-name }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      dev_workflow_identity_provider: ${{ steps.setup.outputs.dev_workflow_identity_provider }}
      dev_service_account: ${{ steps.setup.outputs.dev_service_account }}
    steps:
      - name: Setup inputs passed to the reusable workflow
        id: setup
        run: |
          echo "dev_workflow_identity_provider=$DEV_WORKLOAD_IDENTITY_PROVIDER" >> $GITHUB_OUTPUT
          echo "dev_service_account=$DEV_SERVICE_ACCOUNT" >> $GITHUB_OUTPUT
  build:
    needs: [setup]
    uses: coreeng/p2p/.github/workflows/execute-command.yaml@main
    secrets:
      env_vars: ${{ secrets.env_vars }}
    with:
      command: p2p-build
      env-name: ${{ inputs.dev-env-name }}
      workload-identity-provider: ${{ needs.setup.outputs.dev_workflow_identity_provider }}
      service-account: ${{ needs.setup.outputs.dev_service_account }}
      project-id: ${{ inputs.dev-project-id }}
      dry-run: ${{ inputs.dry-run }}
      pre-targets: ${{ inputs.pre-targets }}
      post-targets: ${{ inputs.post-targets }}

  functional-test:
    needs: [build, setup]
    uses: coreeng/p2p/.github/workflows/execute-command.yaml@main
    secrets:
      env_vars: ${{ secrets.env_vars }}
    with:
      command: p2p-functional
      env-name: ${{ inputs.dev-env-name }}
      workload-identity-provider: ${{ needs.setup.outputs.dev_workflow_identity_provider }}
      service-account: ${{ needs.setup.outputs.dev_service_account }}
      project-id: ${{ inputs.dev-project-id }}
      dry-run: ${{ inputs.dry-run }}
      pre-targets: ${{ inputs.pre-targets }}
      post-targets: ${{ inputs.post-targets }}

  nft-test:
    name: nft-test
    needs: [functional-test, setup]
    secrets:
      env_vars: ${{ secrets.env_vars }}
    uses: coreeng/p2p/.github/workflows/execute-command.yaml@main
    with:
      command: p2p-nft
      env-name: ${{ inputs.dev-env-name }}
      workload-identity-provider: ${{ needs.setup.outputs.dev_workflow_identity_provider }}
      service-account: ${{ needs.setup.outputs.dev_service_account }}
      project-id: ${{ inputs.dev-project-id }}
      dry-run: ${{ inputs.dry-run }}
      pre-targets: ${{ inputs.pre-targets }}
      post-targets: ${{ inputs.post-targets }}

  promote-extended-tests:
    name: promote-extended-tests
    if: github.ref == 'refs/heads/main'
    needs: [nft-test, setup]
    secrets:
      env_vars: ${{ secrets.env_vars }}
    uses: coreeng/p2p/.github/workflows/promote-image.yaml@promote
    with:
      promotion-stage: extended-tests
      dev-workload-identity-provider: ${{ needs.setup.outputs.dev_workflow_identity_provider }}
      prod-workload-identity-provider: 'not_necessary'
      dev-service-account: ${{ needs.setup.outputs.dev_service_account }}
      prod-service-account: 'not_necessary'
      dev-registry: ${{ inputs.region }}-docker.pkg.dev/${{ inputs.dev-project-id }}/tenant
      prod-registry: ${{ inputs.region }}-docker.pkg.dev/${{ inputs.prod-project-id }}/tenant
      dry-run: ${{ inputs.dry-run }}
