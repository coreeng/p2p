name: Developer Platform P2P

on:
  workflow_call:
    secrets:
      env_vars:
        required: false
    inputs:
      env-name:
        required: true
        type: string
      project-id:
        required: true
        type: string
      project-number:
        required: true
        type: string
      tenant-name:
        required: true
        type: string
      region:
        required: false
        type: string
        default: europe-west2
      dry-run:
        required: false
        type: boolean
        default: false

env:
  REGISTRY: ${{ inputs.region }}-docker.pkg.dev/${{ inputs.project-id }}/tenant
  SERVICE_ACCOUNT: p2p-${{ inputs.tenant-name }}@${{ inputs.project-id }}.iam.gserviceaccount.com
  WORKLOAD_IDENTITY_PROVIDER: projects/${{ inputs.project-number }}/locations/global/workloadIdentityPools/p2p-${{ inputs.tenant-name }}/providers/p2p-${{ inputs.tenant-name }}


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      workflow_identity_provider: ${{ steps.setup.outputs.workflow_identity_provider }}
      service_account: ${{ steps.setup.outputs.service_account }}
    steps:
      - name: Setup inputs passed to the reusable workflow
        id: setup
        run: |
          echo "workflow_identity_provider=$WORKLOAD_IDENTITY_PROVIDER" >> $GITHUB_OUTPUT
          echo "service_account=$SERVICE_ACCOUNT" >> $GITHUB_OUTPUT
  build:
    needs: [setup]
    uses: coreeng/p2p/.github/workflows/execute-command.yaml@main
    secrets:
      env_vars: ${{ secrets.env_vars }}
    with:
      command: p2p-build
      env-name: ${{ inputs.env-name }}
      workload-identity-provider: ${{ needs.setup.outputs.workflow_identity_provider }}
      service-account: ${{ needs.setup.outputs.service_account }}
      project-id: ${{ inputs.project-id }}
      dry-run: ${{ inputs.dry-run }}

  functional-test:
    needs: [build, setup]
    uses: coreeng/p2p/.github/workflows/execute-command.yaml@main
    secrets:
      env_vars: ${{ secrets.env_vars }}
    with:
      command: p2p-functional
      env-name: ${{ inputs.env-name }}
      workload-identity-provider: ${{ needs.setup.outputs.workflow_identity_provider }}
      service-account: ${{ needs.setup.outputs.service_account }}
      project-id: ${{ inputs.project-id }}
      dry-run: ${{ inputs.dry-run }}

  nft-test:
    name: nft-test
    needs: [functional-test, setup]
    secrets:
      env_vars: ${{ secrets.env_vars }}
    uses: coreeng/p2p/.github/workflows/execute-command.yaml@main
    with:
      command: p2p-nft
      env-name: ${{ inputs.env-name }}
      workload-identity-provider: ${{ needs.setup.outputs.workflow_identity_provider }}
      service-account: ${{ needs.setup.outputs.service_account }}
      project-id: ${{ inputs.project-id }}
      dry-run: ${{ inputs.dry-run }}

  dev-deploy:
    name: dev-deploy
    if: github.ref == 'refs/heads/main'
    needs: [nft-test, setup]
    secrets:
      env_vars: ${{ secrets.env_vars }}
    uses: coreeng/p2p/.github/workflows/execute-command.yaml@main
    with:
      command: p2p-dev
      env-name: ${{ inputs.env-name }}
      workload-identity-provider: ${{ needs.setup.outputs.workflow_identity_provider }}
      service-account: ${{ needs.setup.outputs.service_account }}
      project-id: ${{ inputs.project-id }}
      dry-run: ${{ inputs.dry-run }}
