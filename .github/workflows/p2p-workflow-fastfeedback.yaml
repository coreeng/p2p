on:
  workflow_call:
    secrets:
      env_vars:
        required: false
      container_registry_user:
        required: false
      container_registry_pat:
        required: false
      container_registry_url:
        required: false
    inputs:
      dry-run:
        required: false
        type: boolean
        default: false
      main-branch:
        required: false
        type: string
        default: 'refs/heads/main'
      checkout-version:
        required: false
        type: string
        default: ''
      app-name:
        required: false
        type: string
        default: ''
      version:
        required: true
        type: string
      region:
        required: false
        type: string
        default: europe-west2
      source:
        required: false
        type: string
        default: ${{ vars.FAST_FEEDBACK }}
      destination:
        required: false
        type: string
        default: ${{ vars.EXTENDED_TEST }}
      working-directory:
        required: false
        type: string
        default: '.'
      corectl-version:
        required: false
        type: string
    outputs:
      version:
        value: ${{ inputs.version }}

jobs:
  build:
    uses: ./.github/workflows/p2p-execute-command.yaml
    secrets:
      env_vars: ${{ secrets.env_vars }}
      container_registry_user: ${{ secrets.container_registry_user }}
      container_registry_pat: ${{ secrets.container_registry_pat }}
      container_registry_url: ${{ secrets.container_registry_url }}
    strategy:
      matrix: ${{ fromJSON(inputs.source) }}
      fail-fast: false
    with:
      command: p2p-build
      github_env: ${{ matrix.deploy_env }}
      app-name: ${{ inputs.app-name }}
      version: ${{ inputs.version }}
      checkout-version: ${{ inputs.checkout-version }}
      dry-run: ${{ inputs.dry-run }}
      region: ${{ inputs.region }}
      working-directory: ${{ inputs.working-directory }}

  functional-test:
    needs: [build]
    uses: ./.github/workflows/p2p-execute-command.yaml
    secrets:
      env_vars: ${{ secrets.env_vars }}
      container_registry_user: ${{ secrets.container_registry_user }}
      container_registry_pat: ${{ secrets.container_registry_pat }}
      container_registry_url: ${{ secrets.container_registry_url }}
    strategy:
      matrix: ${{ fromJSON(inputs.source) }}
      fail-fast: false
    with:
      command: p2p-functional
      subnamespace: functional
      region: ${{ inputs.region }}
      github_env: ${{ matrix.deploy_env }}
      app-name: ${{ inputs.app-name }}
      version: ${{ inputs.version }}
      checkout-version: ${{ inputs.checkout-version }}
      dry-run: ${{ inputs.dry-run }}
      working-directory: ${{ inputs.working-directory }}

  nft-test:
    needs: [build]
    uses: ./.github/workflows/p2p-execute-command.yaml
    secrets:
      env_vars: ${{ secrets.env_vars }}
      container_registry_user: ${{ secrets.container_registry_user }}
      container_registry_pat: ${{ secrets.container_registry_pat }}
      container_registry_url: ${{ secrets.container_registry_url }}
    strategy:
      matrix: ${{ fromJSON(inputs.source) }}
      fail-fast: false
    with:
      command: p2p-nft
      subnamespace: nft
      region: ${{ inputs.region }}
      github_env: ${{ matrix.deploy_env }}
      app-name: ${{ inputs.app-name }}
      version: ${{ inputs.version }}
      checkout-version: ${{ inputs.checkout-version }}
      dry-run: ${{ inputs.dry-run }}
      working-directory: ${{ inputs.working-directory }}

  integration-test:
    needs: [functional-test, nft-test]
    uses: ./.github/workflows/p2p-execute-command.yaml
    secrets:
      env_vars: ${{ secrets.env_vars }}
      container_registry_user: ${{ secrets.container_registry_user }}
      container_registry_pat: ${{ secrets.container_registry_pat }}
      container_registry_url: ${{ secrets.container_registry_url }}
    strategy:
      matrix: ${{ fromJSON(inputs.source) }}
      fail-fast: false
    with:
      command: p2p-integration
      subnamespace: integration
      region: ${{ inputs.region }}
      github_env: ${{ matrix.deploy_env }}
      app-name: ${{ inputs.app-name }}
      version: ${{ inputs.version }}
      checkout-version: ${{ inputs.checkout-version }}
      dry-run: ${{ inputs.dry-run }}
      working-directory: ${{ inputs.working-directory }}

  promote:
    name: promote
    needs: [integration-test]
    if: success() && ( github.ref == inputs.main-branch || github.ref_type == 'tag' )
    secrets:
      env_vars: ${{ secrets.env_vars }}
    uses: ./.github/workflows/p2p-promote-image.yaml
    strategy:
      matrix: ${{ fromJSON(inputs.destination) }}
      fail-fast: false
    with:
      source_matrix: ${{ inputs.source }}
      dest_github_env: ${{ matrix.deploy_env }}
      region: ${{ inputs.region }}
      promotion-stage: extended-test
      app-name: ${{ inputs.app-name }}
      version: ${{ inputs.version }}
      checkout-version: ${{ inputs.checkout-version }}
      dry-run: ${{ inputs.dry-run }}
      working-directory: ${{ inputs.working-directory }}
      corectl-version: ${{ inputs.corectl-version }}
