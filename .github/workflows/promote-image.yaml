name: p2p-command

on:
  workflow_call:
    secrets:
      env_vars:
        required: false
    inputs:
      dev-registry:
        required: true
        type: string
      prod-registry:
        required: true
        type: string
      promotion-stage:
        required: true
        type: string
      dev-workload-identity-provider:
        required: true
        type: string
      dev-service-account:
        required: true
        type: string
      prod-workload-identity-provider:
        required: true
        type: string
      prod-service-account:
        required: true
        type: string
      dry-run:
        required: false
        type: boolean
        default: false
      pre-targets:
        description: |
          Make targets to run before the command
        required: false
        type: string
        default: ''
      post-targets:
        description: |
          Make targets to run after the command
        required: false
        type: string
        default: ''
env:
  REGISTRY_DEV: ${{ inputs.dev-registry }}
  REGISTRY_PROD: ${{ inputs.prod-registry }}

jobs:
  promote-image:
    name: promote-${{ inputs.promotion-stage }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      env_vars: ${{ secrets.env_vars }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Decode environment variables
        run: |
          for i in $env_vars; do
            i=$(echo $i | sed 's/=.*//g')=$(echo ${i#*=})
            echo ::add-mask::${i#*=}
            printf '%s\n' $i >> $GITHUB_ENV
          done

      - name: Authenticate to Google Cloud
        id: auth-dev
        if: inputs.dry-run == false
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ inputs.dev-workload-identity-provider }}
          service_account: ${{ inputs.dev-service-account }}
          token_format: access_token
          access_token_lifetime: 600s
    
      - name: Login to Artifact Registry
        uses: docker/login-action@v2
        if: inputs.dry-run == false
        with:
          registry: europe-west2-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth-dev.outputs.access_token }}

      - name: Run Prepare Promotion
        if: inputs.promotion-stage == 'prod'
        id: run-prepare-promotion
        run: |
          task=$(make | grep -E 'p2p-prepare-promotion-${{ inputs.promotion-stage }}')
          if [ -n "$task" ]; then
              make p2p-prepare-promotion-${{ inputs.promotion-stage }}
          else
              echo "Prepare promotion step does not exist. Skipping..."
          fi

      - name: Authenticate to Google Cloud Prod
        id: auth-prod
        if: inputs.dry-run == false && inputs.promotion-stage == 'prod'
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ inputs.prod-workload-identity-provider }}
          service_account: ${{ inputs.prod-service-account }}
          token_format: access_token
          access_token_lifetime: 600s
    
      - name: Login to Artifact Registry Prod
        uses: docker/login-action@v2
        if: inputs.dry-run == false && inputs.promotion-stage == 'prod'
        with:
          registry: europe-west2-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth-prod.outputs.access_token }}

      - name: Run Promotion
        id: run-promotion
        run: |
          make p2p-promote-${{ inputs.promotion-stage }}
      